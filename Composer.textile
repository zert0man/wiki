\textbf{Composer} -- менеджер зависимостей для PHP. Вы можете описать от каких библиотек зависит ваш проект и Composer установит нужные библиотеки за вас.

Для совместимости различных компоновщиков был разработан стандарт именования PSR-0.
Ниже перечислены эти требования:
\begin{itemize}
	\item Класс и пространство имен должны иметь следующую структуру: \texttt{\textbackslash<Vendor Name>\textbackslash(<Namespace>)*\textbackslash<Class Name>}.
	\item Каждое пространство имен должно иметь пространство верхнего уровня (\texttt{Vendor Name}).
	\item Каждое пространство имен может иметь столько подпространств, сколько ему необходимо.
	\item Каждый разделитель пространства имен будет заменен на \\*\texttt{DIRECTORY\_SEPARATOR} (константа php, отвечающая за разделение каталогов  путях к файлам, например, прямой или обратный слеш),\\* когда будет загружаться из файловой системы.
	\item Каждое нижнее подчеркивание в имени класса будет заменено на \texttt{DIRECTORY\_SEPARATOR}. Нижнее подчеркивание не имеет такого значения для пространства имен.
	\item Пространства имен и имя класса будут иметь суффиксы \texttt{.php} при загрузке из файловой системы.
	\item Алфавитные символы в именах поставщика (\texttt{Vendor Name}), пространствах имен и именах классов могут быть в любой последовательности нижнего и верхнего регистров.
\end{itemize}

Согласно стандарту PSR-0 должен быть верхний уровень  каталогов с именем поставщика и затем названием пакета. 

Таким образом, путь к классу \texttt{Example.php} в пакете \texttt{Package} производителя \texttt{Vendor} будет иметь вид:\texttt{ Vendor\textbackslash Package\textbackslash Example.php}

Классы будут использовать пространства имен соответственно:
\begin{verbatim}
<?php
  namespace Vendor\Package;
  class Example
  {
  }
\end{verbatim}	

Таким образом, определение класса для \texttt{\textbackslash Doctrine\textbackslash Common\textbackslash Connections} будет найдено в \\* \texttt{/path/to/project/lib/Doctrine/Common/Connections.php}, \\* а \texttt{\textbackslash Symfony\textbackslash Core\textbackslash Request} в \\*\texttt{/path/to/project/lib/Symfony/Core/Request.php}.\\* Стандарт PSR-0 не определяет базовую \texttt{/path/to/project/lib} часть пути, и соответствующие автозагрузчики предлагают различные методы для решения этой задачи. Composer по умолчанию скачивает библиотеки в папку \texttt{vendor}.